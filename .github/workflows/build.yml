name: Build

on: push

jobs:
  build:
    runs-on: ${{ matrix.platform.runner }}
    env:
      CXX: g++
    strategy:
      matrix:
        platform:
          [
            { runner: "windows-latest", command: "build:windows" },
            { runner: "macos-latest", command: "build:mac" },
            { runner: "ubuntu-latest", command: "build:linux" },
          ]
      fail-fast: false
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: latest
          platform: x64
        if: ${{ matrix.platform.runner == 'ubuntu-latest' }}

      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main

      - name: Install Conan GYP generator - clone
        uses: sudosubin/git-clone-action@v1.0.1
        with:
          repository: czoido/conan-gyp-generator
          path: conan-gyp-generator

      - name: Install Conan GYP generator - install
        run: conan config install gyp-generator.py -tf generators
        working-directory: ./conan-gyp-generator

      - name: Generate build info
        run: |
          mkdir conan_build && cd conan_build
          conan install .. && cd ..
        shell: bash

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v2
        with:
          node-version: "16.6.1"

      - name: Install Dependencies
        run: |
          npm i --ignore-scripts

      - name: Compile
        run: |
          npm run configure
          npm run ${{ matrix.platform.command }}

      - name: Try execution
        run: |
          node -e "(new (require('./index').Defer)('Hello world')).run(1234).then((...args) => {console.log(...args);process.exit()})"
        continue-on-error: true

      - name: Archive debug artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            index.js
            index.d.ts
            package.json
            prebuilds/
